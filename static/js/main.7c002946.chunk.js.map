{"version":3,"sources":["model/Common.ts","page/BeerListPage.tsx","page/BeerDetailPage.tsx","component/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BrewStatus","BrewStatusUtil","status","planned","fermenting","bottled","finished","ready","BeerListPage","props","getJSONData","a","console","log","fetch","result","json","obj","setState","state","beers","item","pieces","brewDate","push","bottleDate","length","join","color","items","this","map","x","dateItem","undefined","dateLabel","BeerList","to","number","BeerContainer","elevation","style","StatusSpan","statusColor","Container","React","Component","styled","li","Paper","span","BeerDetailPage","storeDetails","details","id","match","params","filename","process","options","headers","getMDData","text","markdown","loadingState","name","statusStyle","brewStatus","fontSize","TableContainer","component","Table","aria-label","TableBody","TableRow","TableCell","dataPairs","row","scope","value","reactBody","output","optional","dryHopDate","yeast","originalGravity","finalGravity","originalBrix","finalBrix","alcoholPct","caps","array","optValue","NavBar","href","src","width","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c002946.chunk.js","sourcesContent":["\nexport enum BrewStatus {\n    planned = \"Planned\",\n    fermenting = \"Fermenting\",\n    bottled = \"Bottled\",\n    finished = \"Finished\",\n    ready = \"Ready\"\n}\n\nexport class BrewStatusUtil {\n\n    static color(status: BrewStatus): string {\n        switch (status) {\n            case BrewStatus.planned: \n                return \"#95a5a6\"\n            case BrewStatus.fermenting: \n                return \"#e67e22\"\n            case BrewStatus.bottled: \n                return \"#f1c40f\"\n            case BrewStatus.finished: \n                return \"#e74c3c\"\n            case BrewStatus.ready:\n                return \"#27ae60\"\n        }\n\n        return \"#27ae60\"\n    }\n}","\nimport { Container, Paper} from '@material-ui/core';\nimport BeerSummary from \"../model/BeerSummary\";\nimport styled from 'styled-components';\nimport React from 'react';\nimport { BrewStatusUtil } from '../model/Common';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport default class BeerListPage extends React.Component<{}, {beers: BeerSummary[]}> {\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {beers: []}\n    }\n\n    dateLabel(item: BeerSummary): string | undefined {\n        var pieces: string[] = []\n        if (item.brewDate) {\n            pieces.push(`Brewed on ${item.brewDate}`)\n        }\n        if (item.bottleDate) {\n            pieces.push(`bottled on ${item.bottleDate}`)\n        }\n        if (pieces.length == 0) {\n            return undefined;\n        }\n        return pieces.join(\" and \")\n    }\n\n    statusColor(item: BeerSummary): string {\n        if (!item.status) {\n            return \"#7f8c8d\"\n        }\n        return BrewStatusUtil.color(item.status)\n    }\n\n    render() {\n        let items = this.state.beers.map(x => {\n            let dateItem = undefined\n            if (this.dateLabel(x)) {\n                dateItem = <p>{this.dateLabel(x)}</p>\n            }\n\n            return <BeerList key={x.number}>\n                \n                <Link to={`/${x.number}`}>\n                    <BeerContainer elevation={1}>\n                    <h2>Skorubrew #{x.number} {x.style} <StatusSpan style={{color:this.statusColor(x)}}>{x.status}</StatusSpan></h2>\n                    {dateItem}\n                    </BeerContainer>\n                \n                </Link>\n                \n            </BeerList>\n        })\n        return <Container>\n            \n            <ul>\n                {items}\n            </ul>\n        </Container>\n    }\n\n    getJSONData = async () => {\n        console.log(\"Fetching beer list\")\n        let filename = `/beerList.json`\n        let result = await fetch(filename);\n        let json = await result.json();\n        let obj: BeerSummary[] = json;\n        this.setState({...this.state, beers: obj})\n    }\n\n    componentDidMount() {\n        this.getJSONData();\n    }\n}\n\nconst BeerList = styled.li`\n    list-style-type: none;\n`;\n\nconst BeerContainer = styled(Paper)`\n    padding: 5px 20px;\n    margin: 10px 0px;\n`;\n\nconst StatusSpan = styled.span`\n    font-size:16px\n`;","\nimport { Container, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody} from '@material-ui/core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport BeerDetail from '../model/BeerDetail'\nimport { BrewStatus, BrewStatusUtil } from '../model/Common';\n\ninterface DetailItem {\n    name: string\n    value: string\n}\n\nexport default class BeerDetailPage extends React.Component<any, {details?: BeerDetail, markdown?: string}> {\n\n    constructor(props: any) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let details = this.state.details\n        if (!details) {\n            return this.loadingState()\n        }\n\n        let name = `Skorubrew #${details.number}`\n\n        let statusStyle = {color:this.statusColor(details.brewStatus), fontSize: \"150%\"}\n\n        return <Container>\n            <h1>{name} - <span>{details.style}</span> </h1>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>Status</TableCell>\n                            <TableCell style={statusStyle}>{details.brewStatus}</TableCell>\n                        </TableRow>\n                        {this.dataPairs().map(row => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell >{row.value}</TableCell>\n                        </TableRow>\n                        )) }\n\n                    </TableBody>\n                </Table>\n                \n            </TableContainer>\n            \n            \n            {this.reactBody()}\n\n        </Container>\n    }\n\n    loadingState() {\n        return <p>Loading beer information</p>;\n    }\n\n    statusColor(status: BrewStatus) {\n        return BrewStatusUtil.color(status)\n    }\n\n    dataPairs(): DetailItem[] {\n        let details = this.state.details\n        if (!details) {\n            return []\n        }\n        let output: DetailItem[] = []\n        \n\n        this.optional(\"Brew Date\", output, details.brewDate)\n        this.optional(\"Bottle Date\", output, details.bottleDate);\n        this.optional(\"Dry Hop Date\", output, details.dryHopDate);\n        this.optional(\"Yeast\", output, details.yeast);\n\n        this.optional(\"Original Gravity\", output, details.originalGravity)\n        this.optional(\"Final Gravity\", output, details.finalGravity)\n\n        this.optional(\"Original Brix\", output, details.originalBrix)\n        this.optional(\"Final Brix\", output, details.finalBrix)\n\n        if (details.alcoholPct) {\n            output.push({name: \"ABV\", value: `${details.alcoholPct}%`});\n        }\n\n        this.optional(\"Caps\", output, details.caps)\n\n        return output;\n    }\n\n    optional(name: string, array: DetailItem[], optValue?: any) {\n        if (optValue) {\n            let item = {name, value: `${optValue}`}\n            array.push(item);\n        }\n    }\n\n    reactBody() {\n        if (!this.state.markdown) {\n            return <br />\n        }\n        return <ReactMarkdown>{this.state.markdown}</ReactMarkdown>\n    }\n\n    storeDetails = (details: BeerDetail) => {\n        this.setState({...this.state, details: details})\n    }\n\n    id = ():string => {\n        return this.props.match.params.number;\n    }\n\n    getJSONData = async () => {\n        console.log(this.props);\n\n        let filename = `${process.env.PUBLIC_URL}/beers/skorubrew${this.id()}.json`\n        console.log(filename);\n        let options = {headers: {'Accept': 'application/json'}}\n        let result = await fetch(filename, options);\n        let json = await result.json();\n        let obj: BeerDetail = json;\n        this.setState({...this.state, details: obj})\n    }\n\n    getMDData = async () => {\n        let filename = `/beers/skorubrew${this.id()}.md`\n        let result = await fetch(filename);\n        let text = await result.text()\n        this.setState({...this.state, markdown: text})\n    }\n\n    componentDidMount() {\n        this.getJSONData();\n        this.getMDData();\n    }\n\n\n}","\nimport React from 'react';\n\ninterface DetailItem {\n    name: string\n    value: string\n}\n\nexport default class NavBar extends React.Component<{}, {}> {\n\n    render() {\n        return <a href=\"/\">\n                <img src=\"assets/logo.png\" width=\"434\" />\n            </a>\n    }\n\n}","import React from 'react';\nimport './App.css';\nimport BeerListPage from \"./page/BeerListPage\"\nimport BeerDetailPage from \"./page/BeerDetailPage\"\nimport NavBar from \"./component/NavBar\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Router>\n        <Switch>\n          <Route path=\"/:number\" exact={true} component={BeerDetailPage} />\n          <Route path=\"/\" exact={true} component={BeerListPage} />\n        </Switch>\n      \n      </Router>\n    </div>\n    \n    \n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}